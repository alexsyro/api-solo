const textArea = document.getElementById('text');
const messageTable = document.getElementById('message-table');
const URL = 'http://localhost:3000';

const socket = io(URL, { autoConnect: true });
const currentChat = '–û–±—â–∏–π';

const weatherState = {
  clear: '—è—Å–Ω–æ',
  'partly-cloudy': '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ',
  cloudy: '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏',
  overcast: '–ø–∞—Å–º—É—Ä–Ω–æ',
  drizzle: '–º–æ—Ä–æ—Å—å',
  'light-rain': '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å',
  rain: '–¥–æ–∂–¥—å',
  'moderate-rain': '—É–º–µ—Ä–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
  'heavy-rain': '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
  'continuous-heavy-rain': '–¥–ª–∏—Ç–µ–ª—å–Ω—ã–π —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
  showers: '–ª–∏–≤–µ–Ω—å',
  'wet-snow': '–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º',
  'light-snow': '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥',
  snow: '—Å–Ω–µ–≥',
  'snow-showers': '—Å–Ω–µ–≥–æ–ø–∞–¥',
  hail: '–≥—Ä–∞–¥',
  thunderstorm: '–≥—Ä–æ–∑–∞',
  'thunderstorm-with-rain': '–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π',
  'thunderstorm-with-hail': '–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º',
};

// –°–º–æ—Ç—Ä–∏–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
socket.onAny((event, ...args) => {
  if (event === 'user:weather') {
    const [forecast] = args;
    const weatherDiv = document.createElement('div');
    const p = document.createElement('p');
    p.innerText = `–°–µ–≥–æ–¥–Ω—è –≤ ${forecast.geo_object.locality.name} ${
      forecast.fact.temp
    }üå°Ô∏è, –æ—â—É—â–∞–µ—Ç—Å—è, –∫–∞–∫ ${forecast.fact.feels_like}üå°Ô∏è, –≤–ª–∞–∂–Ω–æ—Å—Ç—å: üí¶${
      forecast.fact.humidity
    }%, —Å–µ–π—á–∞—Å –Ω–∞ —É–ª–∏—Ü–µ ${weatherState[forecast.fact.condition] || '–Ω–æ—Ä–º–∞–ª—å–Ω–æ'}`;
    weatherDiv.append(p);
    weatherDiv.setAttribute('class', 'weatherDiv');
    messageTable.append(weatherDiv);
    console.log(p);
  }
  console.log(event, args);
});

// –ü—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
socket.on('user:connected', (data) => {
  console.log('AAAAAAAA', data);
  const paragraph = document.createElement('p');
  paragraph.setAttribute('class', 'info');
  paragraph.innerHTML = data.message;
  messageTable.append(paragraph);
});

// –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–æ–≥–æ-—Ç–æ
socket.on('chat:getMessage', (messData) => {
  console.log('New MESSAGE', messData);
  const divMessage = document.createElement('div');
  divMessage.setAttribute('class', 'message-box');
  const divMessageInfo = document.createElement('div');
  divMessageInfo.setAttribute('class', 'message-info');
  const date = document.createElement('p');
  date.setAttribute('class', 'date');
  date.innerHTML = messData.date;
  divMessageInfo.append(date);
  const login = document.createElement('p');
  login.setAttribute('class', 'login');
  login.innerHTML = messData.login;
  divMessageInfo.append(login);
  divMessage.append(divMessageInfo);
  const message = document.createElement('p');
  message.setAttribute('id', 'message');
  message.innerHTML = messData.message;
  divMessage.append(message);
  messageTable.append(divMessage);
});

document.addEventListener('click', (event) => {
  if (event.target.id === 'sendText') {
    if (currentChat === '–û–±—â–∏–π') {
      console.log('SSSSSSS', textArea.value);
      socket.emit('chat:all:sendMessage', textArea.value);
    }
    textArea.value = '';
  }
});
